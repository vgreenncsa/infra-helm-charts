# Default values for the Ketch transponder chart.
# This is a YAML-formatted file.

global:
  image:
    # -- What tagged version of the docker image you want deployed
    # @default -- Defaults to AppVersion in Chart.yaml
    tag: ''
    # -- What docker image pull policy do you want?
    pullPolicy: IfNotPresent
  # -- Any additional imagePullSecrets to be used
  imagePullSecrets: []
  # -- [DEPRECATED] VPA is no longer in use. This whole section will be removed in the next major version.
  vpa:
    enabled: false
  podDisruptionBudget:
    # -- Specifies whether a pod disruption budget should be used
    enabled: true
    # -- Minimum number/percentage of pods that should remain scheduled
    minAvailable: 50%
    # -- Maximum number/percentage of pods that may be made unavailable
    maxUnavailable: ""
  service:
    # -- Annotations to be added to the service
    annotations: {}
  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to be added to the service account
    annotations: {}

config:
  # -- [Required] Which org is Transponder for.  You will receive this Org from Ketch Support <support@ketch.com>
  org: ''
  # -- [Required] What is the ID of Transponder.  This is to identify the transponder.
  #    This commonly reflects the location or environment that the transponder is deployed into.
  #    Only lower case alphabet, numbers, and `_` are valid characters for this ID.
  id: ''

  transponder:
    # -- Resource limits and requests
    resources: {}
    # -- How many Transponder pods to run
    replica: 12
    service:
      # -- Annotations to be added to the service
      annotations: {}
      # -- Type of the service
      # The default value will change to `ClusterIP` in the next major version
      type: NodePort
      # -- Port that this service exposes
      port: 443
      # -- Addresses that are allowed when service is LoadBalancer
      loadBalancerSourceRanges: []
    serviceAccount:
      # -- The name of the service account to use
      # @default -- A generated name using the fullname template
      name: ''
      # -- Annotations to be added to the service account
      annotations: {}

  sonar:
    # -- Specifies whether the agent component should be used
    enabled: true
    # -- Number of seconds between checking for new work
    interval: 60
    storage:
      # -- Which storage class should be used? If left empty, the default storage class will be used.
      class: ""
    # -- Resource limits and requests
    resources: {}
    # -- How many Sonar pods to run
    replica: 1
    service:
      # -- Annotations to be added to the service
      annotations: {}
      # -- Type of the service
      # The default value will change to `ClusterIP` in the next major version
      type: NodePort
      # -- Port that this service exposes
      port: 443
      # -- Addresses that are allowed when service is LoadBalancer
      loadBalancerSourceRanges: []
    serviceAccount:
      # -- The name of the service account to use
      # @default -- A generated name using the fullname template
      name: ''
      # -- Annotations to be added to the service account
      annotations: {}

  agent:
    # -- Specifies whether the agent component should be used
    enabled: false
    # -- Number of milliseconds between checking for new work
    interval: 60000
    # -- List of scripts to use
    scripts: []
    # -- Resource limits and requests
    resources: {}
    # -- How many Agent pods to run
    replica: 3
    service:
      # -- Annotations to be added to the service
      annotations: {}
      # -- Type of the service
      # The default value will change to `ClusterIP` in the next major version
      type: NodePort
      # -- Port that this service exposes
      port: 443
      # -- Addresses that are allowed when service is LoadBalancer
      loadBalancerSourceRanges: []
    serviceAccount:
      # -- The name of the service account to use
      # @default -- A generated name using the fullname template
      name: ''
      # -- Annotations to be added to the service account
      annotations: {}

  # The tls section below is for the transponder mTLS communications between pods.  You can use your own CA certificate,
  # or create a self-signed one.  To create a self-signed certificate, you can use the following as an example:
  #
  #  openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout key.pem -out cert.pem -extensions SAN \
  #    -config <(cat /etc/ssl/openssl.cnf <(printf "\n[SAN]\nsubjectAltName=DNS:transponder"))
  #
  #  cat cert.pem | base64
  #  cat key.pem | base64
  #
  # Insert the above base64 encoded output into the respective content values below.
  #
  tls:
    # -- Override the TLS server name. This should match your TLS certificate
    override: 'transponder'
    cert:
      # -- The base64 encoded TLS certificate.
      content: ''
    key:
      # -- The base64 encoded TLS key.
      content: ''
    rootca:
      # -- The base64 encoded TLS root CA.
      content: ''

  vault:
    # -- [DEPRECATED] Use .secret.provider instead. This field will be removed in the next major version.
    enabled: false
    # -- The address to the Vault cluster
    # address: 'https://vault.vault:8200'
    # secret:
    #  # -- Name of the Kubernetes secret in which the vault token is stored
    #  # @default -- '<transponder_fullname>-confvars'
    #  name: ''
    #  # -- Key of the Kubernetes secret in which the vault token is stored
    #  # @default -- 'vault_token'
    #  key: ''
    # -- The service specific vault token to access vault secrets
    # token: ''
    # -- The vault secrets engine prefix to use
    # prefix: ''
    # tls:
    #   cert:
    #     # -- The base64 encoded vault client TLS certificate.
    #     content: ''
    #   key:
    #     # -- The base64 encoded vault client TLS key.
    #     content: ''
    #   rootca:
    #     # -- The base64 encoded vault client TLS root CA.
    #     content: ''
    #   # -- Enables InsecureSkipVerify on connection.
    #   insecure: 'false'
    #   # -- Override the tls certificate name.  Useful if certificate presents 'vault.your_domain' but you're accessing the service via internal 'vault.vault.svc' endpoint
    #   override: 'vault.your_domain'

  aws:
    # -- AWS Region.  Used for populating the AWS_DEFAULT_REGION environment variable
    region: "us-west-2"
    # -- AWS access key.  Used for AWS Secrets Manager
    keyId: ''
    # -- AWS secret access key.  Used for AWS Secrets Manager
    secretKey: ''
    secretsManager:
      # -- [DEPRECATED] Use .secret.provider instead. This field will be removed in the next major version.
      enabled: true
      # -- Prefix for secret names
      prefix: ketch

  azure:
    # -- Vault URI of the Key Vault
    vaultURI: ''
    # -- Prefix to use; all secrets will be created under this prefix
    prefix: ketch
    # -- Directory/Tenant ID of the app registration
    tenantID: ''
    client:
      # -- Application/Client ID of the app registration
      id: ''
      # -- Application/Client secret of the app registration
      secret: ''

secret:
  # -- Which secret providers to use (either 'awsSecretsManager', 'vault', or 'azureKeyVault')
  provider: ''

ingress:
  # -- Enable ingress
  enabled: true
  # -- Name of the host under this ingress
  hostname: 'transponder'
  # -- Annotations to apply to the ingress
  annotations: {}
  # -- Ingress Class to be used
  class: ''
  # -- Enable TLS configuration for the hostname defined at `ingress.hostname` parameter
  tls: true
  # -- The additional tls configurations to be covered with this ingress record.
  extraTLS: []
  # -- [DEPRECATED] Overriding this field is not desired. This section can be safely removed.
  #    This functionality will be removed in the next major version.
  # defaultBackend: {}

  # If you are using nginx-ingress-controller, the below is the example configuration
  #  annotations:
  #    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  #  class: "nginx"

imageCredentials:
  # -- Enable imagePullSecret
  enabled: true
  # -- What Docker registry is your docker container located at?
  registry: 'https://ketch.jfrog.io/'
  # -- Username to use for image registry
  username: ''
  # -- Password to use for image registry
  password: ''

metrics:
  serviceMonitor:
    # -- Enable prometheus-operator serviceMonitor
    enabled: false
    # -- How often to scrape the metrics endpoints
    interval: 15s

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- The name of the service account to use
  # @default -- A generated name using the fullname template
  name: ""
  # -- Annotations to be added to the service account
  annotations: {}
